{"version":3,"file":"index.cjs.js","sources":["../src/introspection.ts","../src/native_core/index.ts","../src/optimization.ts","../src/index.ts"],"sourcesContent":["import { writeFileSync } from \"fs\";\n\nconst getV8Flags = (nodeVersionMajor: number) => {\n  const flags = [\n    \"--hash-seed=1\",\n    \"--random-seed=1\",\n    \"--no-opt\",\n    \"--predictable\",\n    \"--predictable-gc-schedule\",\n    \"--interpreted-frames-native-stack\",\n  ];\n  if (nodeVersionMajor < 18) {\n    flags.push(\"--no-randomize-hashes\");\n  }\n  if (nodeVersionMajor < 20) {\n    flags.push(\"--no-scavenge-task\");\n  }\n  return flags;\n};\n\nexport const tryIntrospect = () => {\n  if (process.env.__CODSPEED_NODE_CORE_INTROSPECTION_PATH__ !== undefined) {\n    const nodeVersionMajor = parseInt(process.version.slice(1).split(\".\")[0]);\n\n    const introspectionMetadata = {\n      flags: getV8Flags(nodeVersionMajor),\n    };\n    writeFileSync(\n      process.env.__CODSPEED_NODE_CORE_INTROSPECTION_PATH__,\n      JSON.stringify(introspectionMetadata)\n    );\n    process.exit(0);\n  }\n};\n","import path from \"path\";\nimport { LinuxPerf } from \"./linux_perf/linux_perf\";\nimport { Measurement } from \"./measurement/measurement\";\ninterface NativeCore {\n  Measurement: Measurement;\n  LinuxPerf: typeof LinuxPerf;\n}\n\ninterface NativeCoreWithBindingStatus extends NativeCore {\n  isBound: boolean;\n}\n\nlet native_core: NativeCoreWithBindingStatus;\ntry {\n  // eslint-disable-next-line @typescript-eslint/no-var-requires\n  const nativeCore = require(\"node-gyp-build\")(\n    path.dirname(__dirname)\n  ) as NativeCore;\n  native_core = {\n    ...nativeCore,\n    isBound: true,\n  };\n} catch (e) {\n  native_core = {\n    Measurement: {\n      isInstrumented: () => false,\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      startInstrumentation: () => {},\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n      stopInstrumentation: (at) => {},\n    },\n    LinuxPerf: class LinuxPerf {\n      start() {\n        return false;\n      }\n      stop() {\n        return false;\n      }\n    },\n\n    isBound: false,\n  };\n}\n\nexport default native_core;\n","const skipOptimization = process.env.CODSPEED_FORCE_OPTIMIZATION !== \"true\";\n\nexport const initOptimization = () => {\n  if (!skipOptimization) {\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    require(\"v8\").setFlagsFromString(\"--allow-natives-syntax\");\n  }\n};\n\nexport const optimizeFunction = async (fn: CallableFunction) => {\n  if (skipOptimization) {\n    // warmup V8 symbols generation of the performance map\n    await fn();\n    return;\n  }\n  // Source: https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#optimization-killers\n  await fn(); //Fill type-info\n  await fn(); // 2 calls are needed to go from uninitialized -> pre-monomorphic -> monomorphic\n  eval(\"%OptimizeFunctionOnNextCall(fn)\");\n  await fn(); // optimize\n};\n\nexport const optimizeFunctionSync = (fn: CallableFunction) => {\n  if (skipOptimization) {\n    // warmup V8 symbols generation of the performance map\n    fn();\n    return;\n  }\n  // Source: https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#optimization-killers\n  fn(); //Fill type-info\n  fn(); // 2 calls are needed to go from uninitialized -> pre-monomorphic -> monomorphic\n  eval(\"%OptimizeFunctionOnNextCall(fn)\");\n  fn(); // optimize\n};\n","import { tryIntrospect } from \"./introspection\";\ntryIntrospect();\n\nimport native_core from \"./native_core\";\nimport { initOptimization } from \"./optimization\";\n\ndeclare const __VERSION__: string;\n\nconst linuxPerf = new native_core.LinuxPerf();\n\nexport const isBound = native_core.isBound;\n\nexport const setupCore = () => {\n  initOptimization();\n  native_core.Measurement.stopInstrumentation(\n    `Metadata: codspeed-node ${__VERSION__}`\n  );\n  linuxPerf.start();\n};\n\nexport const teardownCore = () => {\n  linuxPerf.stop();\n};\n\nexport { optimizeFunction, optimizeFunctionSync } from \"./optimization\";\nexport const Measurement = native_core.Measurement;\n"],"names":["writeFileSync","native_core"],"mappings":"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"}